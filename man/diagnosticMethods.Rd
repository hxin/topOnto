% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/topGOfunctions.R
\docType{methods}
\name{diagnosticMethods}
\alias{GenTable}
\alias{GenTable,topGOdata-method}
\alias{diagnosticMethods}
\alias{printGenes}
\alias{printGenes,topGOdata,character,character-method}
\alias{printGenes,topGOdata,character,missing-method}
\alias{printGenes-methods}
\alias{showGroupDensity}
\title{Diagnostic functions for topGOdata and topGOresult objects.}
\usage{
GenTable(object, ...)

showGroupDensity(object, whichGO, ranks = FALSE, rm.one = TRUE)

printGenes(object, whichTerms, file, ...)
}
\arguments{
\item{object}{an object of class \code{topGOdata}.}

\item{whichGO}{the GO terms for which the plot should be generated.}

\item{ranks}{if ranks should be used instead of scores.}

\item{rm.one}{the p-values which are 1 are removed.}

\item{whichTerms}{character vector listing the GO terms for which the summary should be printed.}

\item{file}{character string specifying the file in which the results should be printed.}

\item{\dots}{other
       \code{topNodes}  the number of top GO terms to be included in the table / the gene description is trimmed such that it has \code{numChar} characters.
    %%GenTable(object, ..., orderBy = 1, ranksOf = 2, topNodes = 10, numChar = 40)
    Extra arguments for \code{GenTable} can be:
      \code{orderBy} if more than one \code{topGOresult} object is given then \code{orderBy} gives the index of which scores will be used to order the resulting table. Can be an integer index  or a character vector given the name of the \code{topGOresult} object.
      \code{ranksOf} same as \code{orderBy} argument except that this parameter shows the relative ranks of the specified result.
      \code{numChar} the GO term definition will be truncated such that only the first \code{numChar} characters are shown.
    %% printGenes(object, whichTerms, chip, numChar = 100, simplify = TRUE, geneCufOff = 50, pvalCutOff)
    %% printGenes(object, whichTerms, file, oneFile = FALSE, ...)
    Extra arguments for \code{printGenes} can be:
       \code{chip} character string containing the name of the Bioconductor annotation package for a microarray chip.
       \code{numChar}
       \code{simplify} logical variable affecting how the results are returned.
       \code{geneCutOff} the maximal number of genes shown for each term.
       \code{pvalCutOff} only the genes with a p-value less than \code{pvalCutOff} are shown.
       \code{oneFile} if \code{TRUE} then a file for each GO term is generated.}
}
\value{
A data.frame or a list of data.fames.
}
\description{
The \code{GenTable} function generates a summary of the
  results of the enrichment analysis.

  The \code{showGroupDensity} function plots the distributions of the
  gene' scores/ranks inside a GO term.

  The \code{printGenes} function shows a short summary of the top genes annotated
  to the specified GO terms.
}
\details{
\code{GenTable} is an easy to use function for summarising the most
  significant GO terms and the corresponding p-values. The function
  dispatches for \code{topGOdata} and \code{topGOresult} objects, and
  it can take an arbitrary number of the later, making comparison
  between various results easier.

  Note: One needs to type the complete attribute names (the exact name)
  of this function, like: \code{topNodes = 5}, \code{rankOf = "resultFis"}, etc.
  This being the price paid for flexibility of specifying different
  number of \code{topGOdata} objects.



  The \code{showGroupDensity} function analyse the distribution of the
  gene-wise scores for a specified GO term.
  The function will show the distribution of the genes in a GO term
  compared with the complementary set, using a lattice plot.


  \code{printGenes}
  The function will generate a table with all the probes annotated to
  the specified GO term. Various type of identifiers, the gene name and
  the gene-wise statistics are provided in the table.

  One or more GO identifiers can be given to the function using the
  \code{whichTerms} argument. When more than one GO is specified, the
  function returns a list of \code{data.frames}, otherwise only one
  \code{data.frame} is returned.

  The function has a argument \code{file} which, when specified, will
  save the results into a file using the CSV format.

  For the moment the function will work only when the chip used has an
  annotation package available in Bioconductor. It will not work with
  other type of custom annotations.
}
\examples{
########################################
## GenTable
########################################

## load two topGOresult sample objects: resultFis and resultElimFis
data(ONTdata)
\dontrun{
##These code needs the topOnto.xx.db package to run
## generate the result of Fisher's exact test
sig.tab <- GenTable(GOdata, Fis = resultFis, topNodes = 20)

## results of both test
sig.tab <- GenTable(GOdata, resultFis, resultElimFis, topNodes = 20)

## results of both test with specified names
sig.tab <- GenTable(GOdata, Fis = resultFis, ElimFis = resultElimFis, topNodes = 20)

## results of both test with specified names and specified ordering
sig.tab <- GenTable(GOdata, Fis = resultFis, ElimFis = resultElimFis, orderBy = "ElimFis", ranksOf = "Fis", topNodes = 20)
}

########################################
## showGroupDensity
########################################

TERMID <- "DOID:10652"
print(showGroupDensity(GOdata, TERMID, ranks = FALSE, rm.one = FALSE))


########################################
## printGenes
########################################

\dontrun{
library(hgu95av2.db)
goID <- "GO:0006629"

gt <- printGenes(GOdata, whichTerms = goID, chip = "hgu95av2.db", numChar = 40)

goIDs <- c("GO:0006629", "GO:0007076")
gt <- printGenes(GOdata, whichTerms = goIDs, chip = "hgu95av2.db", pvalCutOff = 0.01)

gt[goIDs[1]]
}
}
\author{
Adrian Alexa
}
\seealso{
\code{\link{groupStats-class}},
  \code{\link{getSigGroups-methods}}
}
\keyword{methods}

